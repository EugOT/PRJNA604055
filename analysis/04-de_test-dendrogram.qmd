---
title: "Differential expression analysis of Arcuate Nucleus/Median Eminence astrocytes dataset from Deng G et al 2020"
author: "Evgenii O. Tretiakov"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    df-print: paged
    code-fold: true
    fig-width: 9
    fig-height: 12
    fig-format: retina
    fig-responsive: true
    fig-dpi: 600
execute:
  keep-md: false
  echo: true
  error: false
  message: false
  warning: false
  debug: false
knitr:
  opts_chunk:
    autodep: true
    fig.align: center
    fig.retina: 2
    fig.width: 14
    fig.height: 12
---

```{r setup, include = FALSE}
DOCNAME <- "correlations-within-astrocytes-dataset-from-deng2020"
NOW <- Sys.time()

# Time chunks during knitting
knitr::knit_hooks$set(timeit = function(before) {
  if (before) {
    print(paste("Start:", Sys.time()))
    NOW <<- Sys.time()
  } else {
    print(paste("Stop:", Sys.time()))
    print(Sys.time() - NOW)
  }
})

knitr::knit_hooks$set(debug = function(before, options, envir) {
  if (!before) {
    message(
      paste(names(envir), as.list(envir),
        sep = " = ", collapse = "\n"
      )
    )
  }
})

knitr::opts_chunk$set(
  cache          = FALSE,
  dev            = c("png", "pdf"),
  timeit         = TRUE
)
```

## Load data and setup parameters

```{r libraries, cache=FALSE}
# Load tidyverse infrastructure packages
suppressPackageStartupMessages({
  library(future)
  library(here)
  library(tidyverse)
  library(magrittr)
  library(stringr)
  library(skimr)
  library(RColorBrewer)
  library(viridis)
})


# Load packages for scRNA-seq analysis and visualisation
suppressPackageStartupMessages({
  library(ggplot2)
  library(cowplot)
  library(patchwork)
  library(ggstatsplot)
  library(anndata)
  library(sceasy)
})

sc <- import("scanpy", convert = FALSE)
```

### Set paths

```{r paths}
src_dir <- here("code")
data_dir <- here("data")
output_dir <- here("output")
plots_dir <- here(output_dir, "figures")
tables_dir <- here(output_dir, "tables")
```

### Load helper functions and gene-sets

```{r source, cache = FALSE}
source(here(src_dir, "genes.R"))
source(here(src_dir, "functions.R"))
```

### Set fixed variables

```{r params-computation, cache = FALSE}
# set seed
reseed <- 42
set.seed(seed = reseed)

# Parameters for parallel execution
n_cores <- 32
plan("multisession", workers = n_cores)
options(
  future.globals.maxSize = 100000 * 1024^2,
  future.rng.onMisuse = "ignore"
)
plan()


# ggplot2 theme
theme_set(ggmin::theme_powerpoint())
```

```{r params}
bioproject <- "PRJNA604055"
project <- "deng2020_Arc"
cb_fpr <- 0.001
low_cutoff_gene <- 500
high_cutoff_gene <- NULL
high_cutoff_gene <- 10000
low_cutoff_umis <- NULL
low_cutoff_umis <- -Inf
high_cutoff_umis <- 45000
high_cutoff_pc_mt <- 10
high_cutoff_pc_ribo <- 4
high_cutoff_pc_hb <- 0.1
high_cutoff_doublet_score <- 0.33
high_cutoff_complexity <- 0.8
connectivity_model <- "min_tree"
k <- 10
metric <- "euclidean"
signature <- 100
```

## Load predicted astrocytes data and subset from Deng G et al (2020)

```{r load-data, cache = FALSE}
anndata <- sc$read(here(
  data_dir,
  sprintf("/data/data/resolved_subregions_by_microclusters/best_xgboost-subregional_%s-astrocytes_dataset-msp_%s-metric_%s-k_%s-sign_%s-amb_%s.h5ad", bioproject, connectivity_model, metric, k, signature, cb_fpr)
))

#TODO: this should be merged dataset with the predicted classes and we should subset the data from the study to measure predicted contamination
```

### Convert adata object to R AnnDataR6 object.
```{r convert-to-seurat}
adata <- py_to_r(anndata)
# X_norm <- sc$pp$normalize_total(adata, target_sum = 1e+04, inplace = FALSE)["X"]
sc$pp$normalize_total(adata, target_sum = 1e+04, inplace = TRUE)
sc$pp$log1p(adata)
class(adata)
class(adata$X)
adata
```

```{r export-expression}
X <- as.data.frame(as.matrix(adata$X))
expr_data <- as.data.frame(t(X))
colnames(expr_data) <- rownames(adata$X)
rownames(expr_data) <- colnames(adata$X)
```

```{r select-features}
# X <- as.data.frame(py_to_r(X_norm))
# colnames(X) <- colnames(adata$X)
X <- X[, colSums(X) > 0]
```

```{r metadata}
cdata <- as.data.frame(adata$obs)
```


## Session information

```{r session-info, cache = FALSE}
sI <- sessioninfo::session_info()
sI$loadedOnly <- NULL
print(sI, locale = FALSE)
```